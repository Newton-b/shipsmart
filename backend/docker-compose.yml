version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: raphtrack-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: raphtrack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - raphtrack-network

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: raphtrack-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: raphtrack
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - raphtrack-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: raphtrack-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - raphtrack-network

  # RaphTrack Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: raphtrack-backend
    restart: unless-stopped
    depends_on:
      - postgres
      - mongodb
      - redis
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: raphtrack
      MONGODB_URI: mongodb://admin:password@mongodb:27017/raphtrack?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: password
    ports:
      - "3001:3001"
    volumes:
      - ./uploads:/app/uploads
    networks:
      - raphtrack-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: raphtrack-nginx
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - raphtrack-network

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  raphtrack-network:
    driver: bridge
